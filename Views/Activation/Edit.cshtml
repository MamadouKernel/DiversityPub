@model DiversityPub.Models.Activation
@{
    ViewData["Title"] = "Modifier l'Activation";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4 class="mb-0">
                    <i class="fas fa-edit"></i> Modifier l'Activation
                </h4>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    <input type="hidden" asp-for="Id" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Nom" class="form-label">
                                    <i class="fas fa-map-marker-alt"></i> Nom de l'activation
                                </label>
                                <input asp-for="Nom" class="form-control" required />
                                <span asp-validation-for="Nom" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CampagneId" class="form-label">
                                    <i class="fas fa-bullhorn"></i> Campagne
                                </label>
                                <select asp-for="CampagneId" class="form-select" required id="CampagneId">
                                    <option value="">Sélectionner une campagne</option>
                                    @foreach (var campagne in ViewBag.Campagnes)
                                    {
                                        if (campagne.Id == Model.CampagneId)
                                        {
                                            <option value="@campagne.Id" selected
                                                    data-date-debut="@campagne.DateDebut.ToString("yyyy-MM-dd")" 
                                                    data-date-fin="@campagne.DateFin.ToString("yyyy-MM-dd")">
                                                @campagne.Nom (@campagne.DateDebut.ToString("dd/MM/yyyy") - @campagne.DateFin.ToString("dd/MM/yyyy"))
                                            </option>
                                        }
                                        else
                                        {
                                            <option value="@campagne.Id"
                                                    data-date-debut="@campagne.DateDebut.ToString("yyyy-MM-dd")" 
                                                    data-date-fin="@campagne.DateFin.ToString("yyyy-MM-dd")">
                                                @campagne.Nom (@campagne.DateDebut.ToString("dd/MM/yyyy") - @campagne.DateFin.ToString("dd/MM/yyyy"))
                                            </option>
                                        }
                                    }
                                </select>
                                <span asp-validation-for="CampagneId" class="text-danger"></span>
                                <div id="campagne-date-info" class="alert alert-info mt-2" style="display: none;"></div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">
                            <i class="fas fa-align-left"></i> Description
                        </label>
                        <textarea asp-for="Description" class="form-control" rows="3" 
                                  placeholder="Décrivez les objectifs de cette activation...">@Model.Description</textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="DateActivation" class="form-label">
                                    <i class="fas fa-calendar"></i> Date d'activation
                                </label>
                                <input asp-for="DateActivation" type="date" class="form-control" required />
                                <span asp-validation-for="DateActivation" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="LieuId" class="form-label">
                                    <i class="fas fa-map-marker-alt"></i> Lieu
                                </label>
                                <select asp-for="LieuId" class="form-select" required>
                                    <option value="">Sélectionner un lieu</option>
                                    @foreach (var lieu in ViewBag.Lieux)
                                    {
                                        if (lieu.Id == Model.LieuId)
                                        {
                                            <option value="@lieu.Id" selected>@lieu.Nom</option>
                                        }
                                        else
                                        {
                                            <option value="@lieu.Id">@lieu.Nom</option>
                                        }
                                    }
                                </select>
                                <span asp-validation-for="LieuId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="HeureDebut" class="form-label">
                                    <i class="fas fa-clock"></i> Heure de début
                                </label>
                                <input asp-for="HeureDebut" type="time" class="form-control" required />
                                <span asp-validation-for="HeureDebut" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="HeureFin" class="form-label">
                                    <i class="fas fa-clock"></i> Heure de fin
                                </label>
                                <input asp-for="HeureFin" type="time" class="form-control" required />
                                <span asp-validation-for="HeureFin" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Instructions" class="form-label">
                            <i class="fas fa-list-check"></i> Instructions
                        </label>
                        <textarea asp-for="Instructions" class="form-control" rows="4" 
                                  placeholder="Donnez les instructions détaillées pour cette activation...">@Model.Instructions</textarea>
                        <span asp-validation-for="Instructions" class="text-danger"></span>
                    </div>

                                                             

                    <div class="mb-3">
                        <label asp-for="Statut" class="form-label">
                            <i class="fas fa-tasks"></i> Statut
                        </label>
                        <select asp-for="Statut" class="form-select" required id="statutSelect">
                            <option value="@DiversityPub.Models.enums.StatutActivation.Planifiee">Planifiée</option>
                            <option value="@DiversityPub.Models.enums.StatutActivation.EnCours">En Cours</option>
                            <option value="@DiversityPub.Models.enums.StatutActivation.Suspendue">Suspendue</option>
                            <option value="@DiversityPub.Models.enums.StatutActivation.Terminee">Terminée</option>
                        </select>
                        <span asp-validation-for="Statut" class="text-danger"></span>
                        <div id="statutWarning" class="alert alert-warning mt-2" style="display: none;">
                            <i class="fas fa-exclamation-triangle"></i> 
                            <strong>Attention :</strong> <span id="statutWarningText"></span>
                        </div>
                        <div id="agentsWarning" class="alert alert-danger mt-2" style="display: none;">
                            <i class="fas fa-exclamation-triangle"></i> 
                            <strong>Erreur :</strong> <span id="agentsWarningText"></span>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="@Url.Action("Index", "Activation")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Retour
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Enregistrer les modifications
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Validation des heures et de la date d'activation
        document.addEventListener('DOMContentLoaded', function() {
            const heureDebut = document.getElementById('HeureDebut');
            const heureFin = document.getElementById('HeureFin');
            const dateActivation = document.getElementById('DateActivation');
            const campagneSelect = document.getElementById('CampagneId');
            
            // Permettre les dates passées - pas de restriction minimale
            // const today = new Date().toISOString().split('T')[0];
            // dateActivation.min = today;
            
            // Validation de l'heure de fin
            heureFin.addEventListener('change', function() {
                if (heureDebut.value && this.value && this.value <= heureDebut.value) {
                    alert('L\'heure de fin doit être postérieure à l\'heure de début.');
                    this.value = '';
                }
            });
            
            // Validation de l'heure de début
            heureDebut.addEventListener('change', function() {
                if (heureFin.value && this.value && this.value >= heureFin.value) {
                    alert('L\'heure de début doit être antérieure à l\'heure de fin.');
                    heureFin.value = '';
                }
            });
            
            // Validation de la date d'activation par rapport à la campagne
            campagneSelect.addEventListener('change', function() {
                const selectedOption = this.options[this.selectedIndex];
                if (selectedOption && selectedOption.dataset.dateDebut && selectedOption.dataset.dateFin) {
                    const dateDebut = selectedOption.dataset.dateDebut;
                    const dateFin = selectedOption.dataset.dateFin;
                    
                    // Imposer les restrictions min/max pour respecter l'intervalle de la campagne
                    dateActivation.min = dateDebut;
                    dateActivation.max = dateFin;
                    
                    // Afficher un message informatif
                    const infoDiv = document.getElementById('campagne-date-info');
                    if (infoDiv) {
                        infoDiv.innerHTML = `<i class="fas fa-info-circle"></i> La date d'activation doit être comprise entre ${dateDebut} et ${dateFin}`;
                        infoDiv.style.display = 'block';
                    }
                }
            });
            
                         
             
             // Déclencher la validation au chargement si une campagne est déjà sélectionnée
             if (campagneSelect.value) {
                 campagneSelect.dispatchEvent(new Event('change'));
             }
             
             // Validation des transitions de statut
             const statutSelect = document.getElementById('statutSelect');
             const statutWarning = document.getElementById('statutWarning');
             const statutWarningText = document.getElementById('statutWarningText');
             const agentsWarning = document.getElementById('agentsWarning');
             const agentsWarningText = document.getElementById('agentsWarningText');
             const currentStatut = '@Model.Statut';
             
             statutSelect.addEventListener('change', function() {
                 const newStatut = this.value;
                 
                 // Règles de transition
                 const transitions = {
                     '@DiversityPub.Models.enums.StatutActivation.Planifiee': ['@DiversityPub.Models.enums.StatutActivation.EnCours', '@DiversityPub.Models.enums.StatutActivation.Suspendue', '@DiversityPub.Models.enums.StatutActivation.Terminee'],
                     '@DiversityPub.Models.enums.StatutActivation.EnCours': ['@DiversityPub.Models.enums.StatutActivation.Suspendue', '@DiversityPub.Models.enums.StatutActivation.Terminee'],
                     '@DiversityPub.Models.enums.StatutActivation.Suspendue': ['@DiversityPub.Models.enums.StatutActivation.EnCours', '@DiversityPub.Models.enums.StatutActivation.Terminee'],
                     '@DiversityPub.Models.enums.StatutActivation.Terminee': []
                 };
                 
                 const allowedTransitions = transitions[currentStatut] || [];
                 
                 if (!allowedTransitions.includes(newStatut)) {
                     let warningMessage = '';
                     switch (currentStatut) {
                         case '@DiversityPub.Models.enums.StatutActivation.EnCours':
                             warningMessage = 'Une activation en cours ne peut pas revenir au statut "Planifiée".';
                             break;
                         case '@DiversityPub.Models.enums.StatutActivation.Terminee':
                             warningMessage = 'Une activation terminée ne peut plus changer de statut.';
                             break;
                         case '@DiversityPub.Models.enums.StatutActivation.Suspendue':
                             warningMessage = 'Une activation suspendue ne peut pas revenir au statut "Planifiée".';
                             break;
                         default:
                             warningMessage = `Transition non autorisée depuis le statut "${currentStatut}".`;
                     }
                     
                     statutWarningText.textContent = warningMessage;
                     statutWarning.style.display = 'block';
                     
                     // Remettre l'ancienne valeur
                     this.value = currentStatut;
                     return false;
                 } else {
                     statutWarning.style.display = 'none';
                 }
             
                 
             });
        });
    </script>
} 