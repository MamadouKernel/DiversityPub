@model IEnumerable<DiversityPub.Models.Activation>
@{
    ViewData["Title"] = "Gestion des Activations";
}

<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4 class="mb-0">
                    <i class="fas fa-map-marker-alt"></i> Gestion des Activations
                </h4>
                <a href="@Url.Action("Create", "Activation")" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Nouvelle Activation
                </a>
            </div>
            <div class="card-body">
                <div class="row">
                    @foreach (var activation in Model.OrderByDescending(a => a.DateActivation))
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0">@activation.Nom</h6>
                                    @switch (activation.Statut)
                                    {
                                        case DiversityPub.Models.enums.StatutActivation.Planifiee:
                                            <span class="badge bg-warning">Planifiée</span>
                                            break;
                                        case DiversityPub.Models.enums.StatutActivation.EnCours:
                                            <span class="badge bg-success">En Cours</span>
                                            break;
                                        case DiversityPub.Models.enums.StatutActivation.Suspendue:
                                            <span class="badge bg-warning">Suspendue</span>
                                            break;
                                        case DiversityPub.Models.enums.StatutActivation.Terminee:
                                            <span class="badge bg-info">Terminée</span>
                                            break;
                                    }
                                </div>
                                <div class="card-body">
                                    @if (!string.IsNullOrEmpty(activation.Description))
                                    {
                                        <p class="card-text text-muted">@activation.Description</p>
                                    }
                                    
                                    <div class="row mb-3">
                                        <div class="col-6">
                                            <small class="text-muted">
                                                <i class="fas fa-calendar"></i> Date
                                            </small>
                                            <br>
                                            <strong>@activation.DateActivation.ToString("dd/MM/yyyy")</strong>
                                        </div>
                                        <div class="col-6">
                                            <small class="text-muted">
                                                <i class="fas fa-clock"></i> Heure
                                            </small>
                                            <br>
                                            <strong>@activation.HeureDebut.ToString(@"hh\:mm") - @activation.HeureFin.ToString(@"hh\:mm")</strong>
                                        </div>
                                    </div>
                                    
                                    @if (activation.Campagne != null)
                                    {
                                        <div class="mb-3">
                                            <small class="text-muted">
                                                <i class="fas fa-bullhorn"></i> Campagne
                                            </small>
                                            <br>
                                            <strong>@activation.Campagne.Nom</strong>
                                        </div>
                                    }
                                    
                                    @if (activation.Lieu != null)
                                    {
                                        <div class="mb-3">
                                            <small class="text-muted">
                                                <i class="fas fa-map-marker-alt"></i> Lieu
                                            </small>
                                            <br>
                                            <strong>@activation.Lieu.Nom</strong>
                                        </div>
                                    }
                                    
                                    @if (activation.AgentsTerrain != null && activation.AgentsTerrain.Any())
                                    {
                                        <div class="mb-3">
                                            <small class="text-muted">
                                                <i class="fas fa-users"></i> Agents (@activation.AgentsTerrain.Count)
                                            </small>
                                            <br>
                                            <div class="d-flex flex-wrap gap-1">
                                                @foreach (var agent in activation.AgentsTerrain.Take(3))
                                                {
                                                    var isResponsable = activation.ResponsableId == agent.Id;
                                                    <span class="badge @(isResponsable ? "bg-warning" : "bg-secondary")" style="font-size: 0.75rem;">
                                                        <i class="fas @(isResponsable ? "fa-crown" : "fa-user")"></i> 
                                                        @agent.Utilisateur.Prenom @agent.Utilisateur.Nom
                                                        @if (isResponsable)
                                                        {
                                                            <small class="ms-1">(Responsable)</small>
                                                        }
                                                    </span>
                                                }
                                                @if (activation.AgentsTerrain.Count > 3)
                                                {
                                                    <span class="badge bg-secondary">+@(activation.AgentsTerrain.Count - 3)</span>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="card-footer">
                                    <div class="btn-group w-100" role="group">
                                        <a href="@Url.Action("Details", "Activation", new { id = activation.Id })" 
                                           class="btn btn-sm btn-outline-info">
                                            <i class="fas fa-eye"></i> Détails
                                        </a>
                                        <a href="@Url.Action("Edit", "Activation", new { id = activation.Id })" 
                                           class="btn btn-sm btn-outline-warning">
                                            <i class="fas fa-edit"></i> Modifier
                                        </a>
                                        <a href="@Url.Action("Delete", "Activation", new { id = activation.Id })" 
                                           class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-trash"></i> Supprimer
                                        </a>
                                        @if (activation.Statut == DiversityPub.Models.enums.StatutActivation.Terminee)
                                        {
                                            <button onclick="redemarrerActivation('@activation.Id')" 
                                                    class="btn btn-sm btn-outline-success">
                                                <i class="fas fa-redo"></i> Redémarrer
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body text-center py-5">
                    <i class="fas fa-map-marker-alt fa-3x text-muted mb-3"></i>
                    <h5>Aucune activation trouvée</h5>
                    <p class="text-muted">Commencez par créer votre première activation.</p>
                    <a href="@Url.Action("Create", "Activation")" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Créer une activation
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        function redemarrerActivation(activationId) {
            if (confirm('Êtes-vous sûr de vouloir redémarrer cette activation ? Cela démarrera également la campagne associée.')) {
                $.ajax({
                    url: '@Url.Action("RedemarrerActivation", "Activation")',
                    type: 'POST',
                    data: { activationId: activationId },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Erreur lors du redémarrage de l\'activation');
                    }
                });
            }
        }

        function showToast(type, message) {
            const toastClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const iconClass = type === 'success' ? 'fas fa-check-circle' : 'fas fa-times-circle';
            
            const toast = $(`
                <div class="alert ${toastClass} alert-dismissible fade show position-fixed" 
                     style="top: 20px; right: 20px; z-index: 9999;">
                    <i class="${iconClass}"></i> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `);
            
            $('body').append(toast);
            
            setTimeout(function() {
                toast.alert('close');
            }, 5000);
        }
    </script>
} 