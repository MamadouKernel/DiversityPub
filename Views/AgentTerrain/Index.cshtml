@model IEnumerable<DiversityPub.Models.AgentTerrain>
@{
    ViewData["Title"] = "Agents Terrain";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header mobile-friendly -->
            <div class="header">
                <div class="header-content">
                    <h1><i class="fas fa-users"></i> Agents Terrain</h1>
                    <a href="@Url.Action("Create", "AgentTerrain")" class="btn-ajouter">
                        <i class="fas fa-plus"></i> Nouvel Agent
                    </a>
                </div>
            </div>

            <!-- Messages avec design mobile -->
            @if (TempData["Success"] != null)
            {
                <div class="message success">
                    <i class="fas fa-check-circle"></i>
                    <span>@TempData["Success"]</span>
                </div>
            }
            
            @if (TempData["Error"] != null)
            {
                <div class="message error">
                    <i class="fas fa-exclamation-triangle"></i>
                    <span>@TempData["Error"]</span>
                </div>
            }
            
            @if (TempData["Info"] != null)
            {
                <div class="message info">
                    <i class="fas fa-info-circle"></i>
                    <span>@TempData["Info"]</span>
                </div>
            }

            <!-- Liste des agents optimisée mobile -->
            <div class="liste">
                @if (!Model.Any())
                {
                    <div class="vide">
                        <div class="vide-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <h3>Aucun agent terrain</h3>
                        <p>Créez votre premier agent terrain pour commencer.</p>
                        <a href="@Url.Action("Create", "AgentTerrain")" class="btn">
                            <i class="fas fa-plus"></i> Créer un Agent
                        </a>
                    </div>
                }
                else
                {
                    <div class="cartes">
                        @foreach (var agent in Model)
                        {
                            <div class="carte">
                                <div class="carte-header">
                                    <div class="avatar">
                                        <i class="fas fa-user"></i>
                                    </div>
                                    <div class="infos">
                                        <h3>@agent.Utilisateur.Prenom @agent.Utilisateur.Nom</h3>
                                        <p class="email">@agent.Email</p>
                                    </div>
                                    <div class="actions">
                                        <a href="@Url.Action("Details", "AgentTerrain", new { id = agent.Id })" class="btn-action" title="Voir détails">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </div>
                                </div>
                                
                                <div class="details">
                                    <div class="info-row">
                                        <div class="info">
                                            <i class="fas fa-phone"></i>
                                            <span>@(string.IsNullOrEmpty(agent.Telephone) ? "Non renseigné" : agent.Telephone)</span>
                                        </div>
                                        
                                        <div class="info">
                                            <i class="fas fa-calendar-check"></i>
                                            <span>@agent.Activations.Count activation(s)</span>
                                        </div>
                                    </div>
                                    
                                    @if (agent.PositionsGPS.Any())
                                    {
                                        var dernierePosition = agent.PositionsGPS.First();
                                        <div class="info">
                                            <i class="fas fa-map-marker-alt"></i>
                                            <span>Dernière position: @dernierePosition.Horodatage.ToString("dd/MM/yyyy HH:mm")</span>
                                        </div>
                                    }
                                </div>
                                
                                <div class="actions-bas">
                                    <a href="@Url.Action("Position", "AgentTerrain", new { id = agent.Id })" class="btn-position">
                                        <i class="fas fa-map"></i> Position
                                    </a>
                                    <a href="@Url.Action("Activations", "AgentTerrain", new { id = agent.Id })" class="btn-activations">
                                        <i class="fas fa-list"></i> Activations
                                    </a>
                                    <a href="@Url.Action("Edit", "AgentTerrain", new { id = agent.Id })" class="btn-modifier">
                                        <i class="fas fa-edit"></i> Modifier
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    /* Variables de couleurs de la charte graphique */
    :root {
        --rouge: #A32D18;
        --jaune: #EDAC00;
        --marron: #59311F;
        --marron-clair: #A26D55;
        --blanc: #ffffff;
        --gris: #f8f9fa;
        --texte: #333333;
        --ombre: rgba(0, 0, 0, 0.1);
    }

    /* Reset et base */
    * {
        box-sizing: border-box;
    }

    body {
        background: linear-gradient(135deg, var(--gris) 0%, #e9ecef 100%);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: var(--texte);
        margin: 0;
        padding: 0;
        min-height: 100vh;
    }

    /* Header optimisé mobile */
    .header {
        background: linear-gradient(135deg, var(--rouge) 0%, #8a1f0f 100%);
        color: var(--blanc);
        padding: 1rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 2px 10px var(--ombre);
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1200px;
        margin: 0 auto;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .header h1 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .header h1 i {
        color: var(--jaune);
    }

    .btn-ajouter {
        background: var(--jaune);
        color: var(--marron);
        padding: 0.75rem 1.25rem;
        text-decoration: none;
        border-radius: 25px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(237, 172, 0, 0.3);
    }

    .btn-ajouter:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(237, 172, 0, 0.4);
        text-decoration: none;
        color: var(--marron);
    }

    /* Messages avec design moderne */
    .message {
        padding: 1rem 1.5rem;
        margin-bottom: 1rem;
        border-radius: 12px;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-weight: 500;
        box-shadow: 0 2px 8px var(--ombre);
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto;
    }

    .success {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: var(--blanc);
        border-left: 4px solid #155724;
    }

    .error {
        background: linear-gradient(135deg, var(--rouge) 0%, #dc3545 100%);
        color: var(--blanc);
        border-left: 4px solid #721c24;
    }

    .info {
        background: linear-gradient(135deg, var(--jaune) 0%, #ffc107 100%);
        color: var(--marron);
        border-left: 4px solid #856404;
    }

    /* Container principal */
    .liste {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    /* État vide */
    .vide {
        text-align: center;
        padding: 3rem 2rem;
        background: var(--blanc);
        border-radius: 20px;
        box-shadow: 0 4px 20px var(--ombre);
        margin: 2rem 0;
    }

    .vide-icon {
        margin-bottom: 1.5rem;
    }

    .vide i {
        font-size: 4rem;
        color: var(--marron-clair);
        opacity: 0.7;
    }

    .vide h3 {
        color: var(--marron);
        margin-bottom: 1rem;
        font-size: 1.5rem;
        font-weight: 600;
    }

    .vide p {
        color: #666;
        margin-bottom: 2rem;
        font-size: 1.1rem;
    }

    /* Grille responsive */
    .cartes {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    /* Cartes modernes */
    .carte {
        background: var(--blanc);
        border-radius: 16px;
        padding: 1.5rem;
        border: none;
        box-shadow: 0 4px 20px var(--ombre);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .carte::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--rouge), var(--jaune));
    }

    .carte:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
    }

    /* Header de carte */
    .carte-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #eee;
    }

    .avatar {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, var(--rouge) 0%, var(--marron) 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--blanc);
        font-size: 1.5rem;
        box-shadow: 0 2px 10px rgba(163, 45, 24, 0.3);
    }

    .infos {
        flex: 1;
    }

    .infos h3 {
        margin: 0 0 0.25rem 0;
        color: var(--marron);
        font-size: 1.3rem;
        font-weight: 600;
    }

    .infos .email {
        margin: 0;
        color: #666;
        font-size: 0.95rem;
        word-break: break-word;
    }

    .actions {
        display: flex;
        gap: 0.5rem;
    }

    .btn-action {
        background: var(--gris);
        color: var(--marron);
        padding: 0.75rem;
        border-radius: 12px;
        text-decoration: none;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        transition: all 0.3s ease;
    }

    .btn-action:hover {
        background: var(--rouge);
        color: var(--blanc);
        transform: scale(1.1);
        text-decoration: none;
    }

    /* Détails */
    .details {
        margin-bottom: 1.5rem;
    }

    .info-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem;
        background: var(--gris);
        border-radius: 10px;
        font-size: 0.9rem;
    }

    .info i {
        color: var(--rouge);
        width: 16px;
        text-align: center;
    }

    /* Actions bas */
    .actions-bas {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        gap: 0.75rem;
    }

    .btn-position, .btn-activations, .btn-modifier {
        padding: 0.75rem 1rem;
        text-decoration: none;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        font-size: 0.9rem;
        font-weight: 600;
        transition: all 0.3s ease;
        text-align: center;
        min-height: 44px;
    }

    .btn-position {
        background: linear-gradient(135deg, var(--jaune) 0%, #ffc107 100%);
        color: var(--marron);
        box-shadow: 0 2px 8px rgba(237, 172, 0, 0.3);
    }

    .btn-activations {
        background: linear-gradient(135deg, var(--marron) 0%, var(--marron-clair) 100%);
        color: var(--blanc);
        box-shadow: 0 2px 8px rgba(89, 49, 31, 0.3);
    }

    .btn-modifier {
        background: linear-gradient(135deg, var(--rouge) 0%, #dc3545 100%);
        color: var(--blanc);
        box-shadow: 0 2px 8px rgba(163, 45, 24, 0.3);
    }

    .btn-position:hover, .btn-activations:hover, .btn-modifier:hover {
        transform: translateY(-2px);
        text-decoration: none;
        color: inherit;
    }

    .btn {
        background: linear-gradient(135deg, var(--rouge) 0%, var(--marron) 100%);
        color: var(--blanc);
        padding: 1rem 2rem;
        text-decoration: none;
        border-radius: 25px;
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        font-weight: 600;
        font-size: 1.1rem;
        box-shadow: 0 4px 15px rgba(163, 45, 24, 0.3);
        transition: all 0.3s ease;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(163, 45, 24, 0.4);
        text-decoration: none;
        color: var(--blanc);
    }

    /* Responsive design optimisé */
    @@media (max-width: 768px) {
        .header-content {
            flex-direction: column;
            text-align: center;
            gap: 1rem;
        }

        .header h1 {
            font-size: 1.3rem;
        }

        .btn-ajouter {
            width: 100%;
            justify-content: center;
        }

        .cartes {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .carte {
            padding: 1.25rem;
        }

        .info-row {
            grid-template-columns: 1fr;
            gap: 0.75rem;
        }

        .actions-bas {
            grid-template-columns: 1fr;
            gap: 0.5rem;
        }

        .btn-position, .btn-activations, .btn-modifier {
            padding: 1rem;
            font-size: 1rem;
        }

        .liste {
            padding: 0 0.5rem;
        }

        .message {
            margin: 0 0.5rem 1rem 0.5rem;
            padding: 1rem;
        }
    }

    @@media (max-width: 480px) {
        .header {
            padding: 0.75rem;
        }

        .header h1 {
            font-size: 1.2rem;
        }

        .carte-header {
            flex-direction: column;
            text-align: center;
            gap: 0.75rem;
        }

        .avatar {
            width: 50px;
            height: 50px;
            font-size: 1.25rem;
        }

        .actions {
            position: absolute;
            top: 1rem;
            right: 1rem;
        }

        .btn-action {
            width: 35px;
            height: 35px;
            padding: 0.5rem;
        }
    }

    /* Animations pour améliorer l'UX */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .carte {
        animation: fadeInUp 0.6s ease-out;
    }

    .carte:nth-child(1) { animation-delay: 0.1s; }
    .carte:nth-child(2) { animation-delay: 0.2s; }
    .carte:nth-child(3) { animation-delay: 0.3s; }
    .carte:nth-child(4) { animation-delay: 0.4s; }
    .carte:nth-child(5) { animation-delay: 0.5s; }
    .carte:nth-child(6) { animation-delay: 0.6s; }
</style> 