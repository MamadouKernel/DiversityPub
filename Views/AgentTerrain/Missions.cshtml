@model IEnumerable<DiversityPub.Models.Activation>
@{
    Layout = "_AgentLayout";
    ViewData["Title"] = "Mes Missions";
    var agent = ViewBag.Agent as DiversityPub.Models.AgentTerrain;
    
    // Calculer les statistiques
    var totalMissions = 0;
    var missionsEnCours = 0;
    var missionsTerminees = 0;
    var missionsPlanifiees = 0;
    
    if (Model != null)
    {
        foreach (var activation in Model)
        {
            totalMissions++;
            if (activation.Statut == DiversityPub.Models.enums.StatutActivation.EnCours)
                missionsEnCours++;
            else if (activation.Statut == DiversityPub.Models.enums.StatutActivation.Terminee)
                missionsTerminees++;
            else if (activation.Statut == DiversityPub.Models.enums.StatutActivation.Planifiee)
                missionsPlanifiees++;
        }
    }
}

<style>
    .mission-card {
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        border: none;
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
    }

    .mission-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
    }

    .mission-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #A32D18, #EDAC00);
    }

    .mission-header {
        padding: 1.5rem 1.5rem 1rem;
        border-bottom: 1px solid #e9ecef;
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    }

    .mission-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        line-height: 1.3;
    }

    .mission-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .mission-content {
        padding: 1.5rem;
    }

    .mission-info {
            display: flex;
        align-items: center;
        margin-bottom: 0.75rem;
        padding: 0.5rem 0;
    }

    .mission-info:last-child {
        margin-bottom: 0;
    }

    .mission-icon {
        width: 40px;
        height: 40px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 1rem;
            color: white;
        flex-shrink: 0;
    }

    .mission-icon.campaign {
        background: linear-gradient(135deg, #A32D18, #c94a3a);
    }

    .mission-icon.location {
        background: linear-gradient(135deg, #28a745, #20c997);
    }

    .mission-icon.date {
        background: linear-gradient(135deg, #17a2b8, #6f42c1);
    }

    .mission-icon.time {
        background: linear-gradient(135deg, #ffc107, #fd7e14);
    }

    .mission-text {
        flex: 1;
    }

    .mission-label {
        font-size: 0.875rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
        font-weight: 500;
    }

    .mission-value {
        font-size: 1rem;
        color: #2c3e50;
        font-weight: 600;
    }

    .mission-description {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
        margin: 1rem 0;
        border-left: 4px solid #A32D18;
    }

    .mission-actions {
        padding: 1.5rem;
        background: #f8f9fa;
        border-top: 1px solid #e9ecef;
    }

    .btn-mission {
        padding: 0.75rem 1.5rem;
        border-radius: 10px;
            font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.875rem;
            transition: all 0.3s ease;
        border: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-mission:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .btn-primary-mission {
        background: linear-gradient(135deg, #A32D18, #c94a3a);
        color: white;
    }

    .btn-success-mission {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
    }

    .btn-warning-mission {
        background: linear-gradient(135deg, #ffc107, #fd7e14);
        color: white;
    }

    .btn-danger-mission {
        background: linear-gradient(135deg, #dc3545, #e74c3c);
        color: white;
    }

    .stats-card {
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        border: none;
        border-radius: 12px;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        text-align: center;
        padding: 1.5rem;
    }

    .stats-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 25px rgba(0, 0, 0, 0.12);
    }

    .stats-number {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        background: linear-gradient(135deg, #A32D18, #EDAC00);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .stats-label {
        font-size: 0.875rem;
        color: #6c757d;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        }
        
        .empty-state {
            text-align: center;
        padding: 3rem 2rem;
    }

    .empty-icon {
        font-size: 5rem;
        color: #dee2e6;
        margin-bottom: 1.5rem;
    }

    .empty-title {
        font-size: 1.5rem;
        color: #6c757d;
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .empty-subtitle {
        color: #adb5bd;
        font-size: 1rem;
        }
    </style>

<div class="content-card">
    <h2 class="page-title">Mes Activations</h2>
    <p class="page-subtitle">Gérez vos missions et activations en cours</p>
    
    <!-- Statistiques -->
    <div class="row mb-4">
        <div class="col-md-3 col-6 mb-3">
            <div class="stats-card">
                <div class="stats-number">@totalMissions</div>
                <div class="stats-label">Total</div>
                        </div>
                    </div>
        <div class="col-md-3 col-6 mb-3">
            <div class="stats-card">
                <div class="stats-number">@missionsPlanifiees</div>
                <div class="stats-label">Planifiées</div>
                    </div>
                </div>
        <div class="col-md-3 col-6 mb-3">
            <div class="stats-card">
                <div class="stats-number">@missionsEnCours</div>
                <div class="stats-label">En Cours</div>
            </div>
        </div>
        <div class="col-md-3 col-6 mb-3">
            <div class="stats-card">
                <div class="stats-number">@missionsTerminees</div>
                <div class="stats-label">Terminées</div>
                </div>
                </div>
            </div>

    <!-- Liste des missions -->
    @if (Model != null && Model.Any())
                {
                    <div class="row">
                        @foreach (var activation in Model)
                        {
                            <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="mission-card">
                        <div class="mission-header">
                            <div class="d-flex justify-content-between align-items-start">
                                <h5 class="mission-title">@activation.Nom</h5>
                                <span class="mission-badge @GetStatusBadgeClass(activation.Statut)">
                                            @GetStatusText(activation.Statut)
                                        </span>
                                    </div>
                        </div>
                        
                        <div class="mission-content">
                            <div class="mission-info">
                                <div class="mission-icon campaign">
                                    <i class="fas fa-bullhorn"></i>
                                </div>
                                <div class="mission-text">
                                    <div class="mission-label">Campagne</div>
                                    <div class="mission-value">@activation.Campagne?.Nom</div>
                                </div>
                            </div>
                            
                            <div class="mission-info">
                                <div class="mission-icon location">
                                    <i class="fas fa-map-marker-alt"></i>
                                </div>
                                <div class="mission-text">
                                    <div class="mission-label">Lieu</div>
                                    <div class="mission-value">@activation.Lieu?.Nom</div>
                                </div>
                            </div>
                            
                            <div class="mission-info">
                                <div class="mission-icon date">
                                    <i class="fas fa-calendar"></i>
                                </div>
                                <div class="mission-text">
                                    <div class="mission-label">Date</div>
                                    <div class="mission-value">@activation.DateActivation.ToString("dd/MM/yyyy")</div>
                                            </div>
                                            </div>
                            
                            <div class="mission-info">
                                <div class="mission-icon time">
                                    <i class="fas fa-clock"></i>
                                            </div>
                                <div class="mission-text">
                                    <div class="mission-label">Horaire</div>
                                    <div class="mission-value">@activation.HeureDebut.ToString(@"hh\:mm") - @activation.HeureFin.ToString(@"hh\:mm")</div>
                                            </div>
                                        </div>
                                        
                                        @if (!string.IsNullOrEmpty(activation.Description))
                                        {
                                <div class="mission-description">
                                    <i class="fas fa-info-circle me-2"></i>
                                                @activation.Description
                                            </div>
                                        }
                                    </div>
                        
                        <div class="mission-actions">
                            <div class="d-flex gap-2 flex-wrap">
                                            <a href="@Url.Action("Details", "AgentTerrain", new { id = activation.Id })" 
                                   class="btn btn-mission btn-primary-mission flex-fill">
                                                <i class="fas fa-eye"></i> Détails
                                            </a>
                                            
                                            @if (activation.Statut == DiversityPub.Models.enums.StatutActivation.Planifiee && 
                                                 activation.DateActivation.Date == DateTime.Today)
                                            {
                                                <button onclick="demarrerActivation('@activation.Id')" 
                                            class="btn btn-mission btn-success-mission">
                                                    <i class="fas fa-play"></i> Démarrer
                                                </button>
                                            }
                                            else if (activation.Statut == DiversityPub.Models.enums.StatutActivation.EnCours)
                                            {
                                    <button onclick="suspendreActivation('@activation.Id')" 
                                            class="btn btn-mission btn-warning-mission">
                                        <i class="fas fa-pause"></i> Suspendre
                                    </button>
                                                <button onclick="terminerActivation('@activation.Id')" 
                                            class="btn btn-mission btn-danger-mission">
                                                    <i class="fas fa-stop"></i> Terminer
                                                </button>
                                            }
                                            else if (activation.Statut == DiversityPub.Models.enums.StatutActivation.Suspendue)
                                            {
                                                <button onclick="reprendreActivation('@activation.Id')" 
                                            class="btn btn-mission btn-success-mission">
                                                    <i class="fas fa-play"></i> Reprendre
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
        <div class="content-card">
                    <div class="empty-state">
                <div class="empty-icon">
                        <i class="fas fa-tasks"></i>
                </div>
                <h3 class="empty-title">Aucune mission trouvée</h3>
                <p class="empty-subtitle">Vous n'avez pas encore de missions assignées.</p>
            </div>
        </div>
    }
</div>

<!-- Modal de suspension -->
<div class="modal fade" id="suspensionModal" tabindex="-1" aria-labelledby="suspensionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="suspensionModalLabel">
                    <i class="fas fa-pause text-warning"></i> Suspendre l'Activation
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="text-muted mb-3">
                    <i class="fas fa-info-circle"></i> 
                    La suspension nécessite un motif obligatoire pour justifier l'arrêt temporaire.
                </p>
                <div class="mb-3">
                    <label for="motifSuspension" class="form-label">
                        <i class="fas fa-comment text-warning"></i> Motif de suspension *
                    </label>
                    <textarea class="form-control" id="motifSuspension" rows="4" 
                              placeholder="Décrivez le motif de suspension (obligatoire)..."></textarea>
                    <div class="form-text">
                        Exemples : Problème technique, conditions météo, indisponibilité d'équipement...
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Annuler
                </button>
                <button type="button" class="btn btn-warning" onclick="confirmerSuspension()">
                    <i class="fas fa-pause"></i> Suspendre
                </button>
            </div>
            </div>
        </div>
    </div>

@functions {
    public string GetStatusBadgeClass(DiversityPub.Models.enums.StatutActivation statut)
    {
        return statut switch
        {
            DiversityPub.Models.enums.StatutActivation.Planifiee => "bg-warning",
            DiversityPub.Models.enums.StatutActivation.EnCours => "bg-success",
            DiversityPub.Models.enums.StatutActivation.Suspendue => "bg-warning",
            DiversityPub.Models.enums.StatutActivation.Terminee => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    public string GetStatusText(DiversityPub.Models.enums.StatutActivation statut)
    {
        return statut switch
        {
            DiversityPub.Models.enums.StatutActivation.Planifiee => "Planifiée",
            DiversityPub.Models.enums.StatutActivation.EnCours => "En Cours",
            DiversityPub.Models.enums.StatutActivation.Suspendue => "Suspendue",
            DiversityPub.Models.enums.StatutActivation.Terminee => "Terminée",
            _ => "Inconnu"
        };
    }
}

@section Scripts {
    <script>
        let currentActivationId = null;
        
        function demarrerActivation(activationId) {
            if (confirm('Êtes-vous sûr de vouloir démarrer cette activation ?')) {
                $.ajax({
                    url: '@Url.Action("DemarrerActivation", "AgentTerrain")',
                    type: 'POST',
                    data: { 
                        activationId: activationId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('Erreur lors du démarrage de l\'activation');
                    }
                });
            }
        }

        function suspendreActivation(activationId) {
            currentActivationId = activationId;
            $('#motifSuspension').val(''); // Vider le champ
            $('#suspensionModal').modal('show');
        }

        function confirmerSuspension() {
            const motif = $('#motifSuspension').val().trim();
            
            if (!motif) {
                alert('Le motif de suspension est obligatoire !');
                $('#motifSuspension').focus();
                return;
            }
            
            if (confirm('Êtes-vous sûr de vouloir suspendre cette activation ?')) {
                $.ajax({
                    url: '@Url.Action("SuspendreActivation", "AgentTerrain")',
                    type: 'POST',
                    data: { 
                        activationId: currentActivationId,
                        motifSuspension: motif,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            $('#suspensionModal').modal('hide');
                                location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('Erreur lors de la suspension de l\'activation');
                    }
                });
            }
        }

        function terminerActivation(activationId) {
            if (confirm('Êtes-vous sûr de vouloir terminer cette activation ?')) {
                $.ajax({
                    url: '@Url.Action("TerminerActivation", "AgentTerrain")',
                    type: 'POST',
                    data: { 
                        activationId: activationId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                                location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('Erreur lors de la terminaison de l\'activation');
                    }
                });
            }
        }

        function reprendreActivation(activationId) {
            if (confirm('Êtes-vous sûr de vouloir reprendre cette activation ?')) {
                $.ajax({
                    url: '@Url.Action("ReprendreActivation", "AgentTerrain")',
                    type: 'POST',
                    data: { 
                        activationId: activationId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                                location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('Erreur lors de la reprise de l\'activation');
                    }
                });
            }
        }
    </script>
} 